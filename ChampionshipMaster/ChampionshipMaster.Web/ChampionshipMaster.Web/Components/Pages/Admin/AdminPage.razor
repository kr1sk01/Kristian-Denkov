@page "/admin"
@inject NavigationManager NavigationManager
@inject ITokenService tokenService
@inject INotifier notifier

@rendermode InteractiveServer

@if (isAdmin)
{
    <h1>Adminceto BACE!</h1>
    <RadzenButton Click="@(() => RedirectToAnotherPage("gamestatusmain"))" Text="Manage Game Statuses" ButtonStyle="ButtonStyle.Secondary" />
    <RadzenButton Click="@(() => RedirectToAnotherPage("gametypemain"))" Text="Manage Game Types" ButtonStyle="ButtonStyle.Secondary" />
    <RadzenButton Click="@(() => RedirectToAnotherPage("TeamTypeMain"))" Text="Manage Team Types" ButtonStyle="ButtonStyle.Secondary" />
}

@code {
    bool isAdmin = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (await tokenService.ValidateToken(true))
            {
                isAdmin = true;
                StateHasChanged();
            }
            else 
            {
                notifier.SendErrorNotification("Access denied!");
                notifier.SendWarningNotification("If you believe there is an error, please contact administrator!", 10);
                NavigationManager.NavigateTo("/"); 
            }
        }
    }

    private void RedirectToAnotherPage(string url)
    {
        NavigationManager.NavigateTo(url);
    }
}
