@page "/createGame"
@using ChampionshipMaster.SHARED.DTO
@using ChampionshipMaster.Web.Services
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Radzen
@using Radzen.Blazor

@rendermode InteractiveServer
@inherits ComponentBase

<div class="form-container">
    <RadzenTemplateForm TItem="GameDto" Data="@game" Submit="@OnSubmit" InvalidSubmit="@OnInvalidSubmit">
        <div class="form-row">
            <div class="form-group half-width">
                <RadzenLabel Text="Game Name" Class="form-label" />
                <RadzenTextBox Name="Name" @bind-Value="game.Name" Style="width: 100%;" Class="form-control" />
                <RadzenRequiredValidator Component="Name" Text="Game Name is required" />
            </div>
            <div class="form-group half-width">
                <RadzenLabel Text="Game Type" Class="form-label" />
                <RadzenDropDown Name="GameType" @bind-Value="gameType" @ref="gameTypeDropDown" TValue="GameTypeDto" TextProperty="Name" Data="gameTypes" Style="width: 100%;" Change="@(args => OnGameTypeSelect(args))" />
                <RadzenRequiredValidator Component="GameType" Text="Game Type is required" />
            </div>
        </div>
        <div class="form-row">
            <div class="form-group half-width">
                <RadzenLabel Text="Date" Class="form-label" />
                <RadzenDatePicker Kind="DateTimeKind.Local" Class="form-control"
                                  Name="Date"
                                  ShowTime="true"
                                  DateFormat="dd/MM/yyyy HH:mm"
                                  @bind-Value="game.Date"
                                  Style="width: 100%;"
                                  DateRender="DateRender"/>
                <RadzenRequiredValidator Component="Date" Text="Date is required"/>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group half-width" style="@(gameTypeDropDown.SelectedItem == null ? "display: none;" : "display: block;")">
                <RadzenLabel Text="Team 1" Class="form-label" />
                <RadzenDropDown TValue="int"
                                @ref="@(teamDropDowns[0])"
                                TextProperty="Name"
                                ValueProperty="Id"
                                Data="selectableTeams"
                                ClearSearchAfterSelection="true"
                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                FilterOperator="StringFilterOperator.StartsWith"
                                AllowFiltering="true"
                                Change="@(args => OnTeamSelect(args, 0))"
                                Style="width: 100%;"
                                Name="Team1"/>
                <RadzenRequiredValidator Component="Team1" Text="Team 1 is required"/>
            </div>
            <div class="form-group half-width" style="@(gameTypeDropDown.SelectedItem == null ? "display: none;" : "display: block;")">
                <RadzenLabel Text="Team 2" Class="form-label" />
                <RadzenDropDown TValue="int"
                                @ref="@(teamDropDowns[1])"
                                TextProperty="Name"
                                ValueProperty="Id"
                                Data="selectableTeams"
                                ClearSearchAfterSelection="true"
                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                FilterOperator="StringFilterOperator.StartsWith"
                                AllowFiltering="true"
                                Change="@(args => OnTeamSelect(args, 1))" 
                                Style="width: 100%;"
                                Name="Team2"/>
                <RadzenRequiredValidator Component="Team2" Text="Team 2 is required" />
            </div>
        </div>  
        <div class="form-actions">
            <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" Style="margin-right: 10px;" Class="btn btn-primary"  />
            <RadzenButton ButtonType="ButtonType.Reset" Icon="refresh" Text="Reset" Class="btn btn-secondary" Click="OnResetClicked" />
        </div>
    </RadzenTemplateForm>

    <RadzenNotification />

    @if (!isLogged)
    {
        <div class="alert alert-warning">
            You are not logged in. Please log in to create a game.
        </div>
    }
</div>
