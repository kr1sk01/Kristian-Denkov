@page "/editteam/{id}"

@inject NavigationManager nManager
@inject Radzen.DialogService dialogService

@inject IHttpClientFactory httpClient
@inject IConfiguration configuration
@inject ITokenService tokenService
@inject IHttpClientFactory httpClient
@inject IWebHostEnvironment Environment
@inject INotifier notifier

@inject ProtectedLocalStorage _localStorage
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<h3>Edit Team</h3>



    <div class="rz-p-sm-12 rz-text-align-center">
        <center></center><br />
        <ChangeTeamMembers @ref=@component id="@id" StateChange="@CheckButtonState" ></ChangeTeamMembers>
        
    </div>
    <RadzenButton Click=@Click Text="Add Player To Team" ButtonStyle="ButtonStyle.Primary"  />





@code {

    [Parameter] public string id { get; set; }
    bool isValueInitial = true;
    ChangeTeamMembers component;

    public void CheckButtonState()
    {
        isValueInitial = component.isValueInitial;
        //StateHasChanged();
    }

    public void Click()
    {
        StateHasChanged();
    }
    // Pass to this dictionary which has for key all choosen players list and for value username for the user which does it 
    /*
     *   EXHAMPLE:
     *
     *   Dictionary<PlayerDto, string> dict = new Dictionary<PlayerDto, string>();
     *   for (int i = 0; i < teamPlayersToSet.Count; i++)
     *   {
     *       dict.Add(teamPlayersToSet[i], sender[i]);
     *   }
     *
     *   Then just past dict to AddPlayerToTeam 
     *   We dont need initial players, only chosen one from dropdowns!
     */
    private async Task AddPlayerToTeam(Dictionary<PlayerDto, string> dict)
    {
        using HttpClient client = httpClient.CreateClient(configuration["ClientName"]!);

        client.DefaultRequestHeaders.Add("Authorization", $"Bearer {await tokenService.GetToken()}");
        var result = await client.PostAsJsonAsync($"/api/Teams/addplayer/{id}", dict);
        if (result.IsSuccessStatusCode)
        {
            notifier.SendSuccessNotification("This player was added to the team successfully!");
        }
        else
        {
            notifier.SendErrorNotification(await result.Content.ReadAsStringAsync());
        }

    }
}
