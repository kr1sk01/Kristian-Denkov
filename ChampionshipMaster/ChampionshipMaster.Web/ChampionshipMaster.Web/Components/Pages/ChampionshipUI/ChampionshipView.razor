@page "/championshipview"
@using System.Net.Http
@inject IHttpClientFactory httpClient
@inject NavigationManager nManager
@inject IConfiguration configuration

@rendermode InteractiveServer

<PageTitle>Championships</PageTitle>
<button @onclick="Sort">Sort</button>

@if (championshipWithDetails != null)
{
    <table class="table">
        <thead>
            <tr>
                <td>id</td>
                <th>Name</th>
                <th>Game Type</th>
                <th>Date</th>
                <th>Winner</th>
                <th>Champ Status</th>
                <th>Champ Type</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in championshipWithDetails)
            {
                <tr class="table-row">
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.GameTypeName</td>
                    <td>@item.Date</td>
                    <td>@item.WinnerName</td>

                    @switch (item.ChampionshipStatusName)
                    {
                        case "Finished":
                            StatusColor = "blue";
                            break;
                        case "Coming":
                            StatusColor = "red";
                            break;
                        case "Live":
                            StatusColor = "green";
                            break;
                        case "Cancelled":
                            StatusColor = "darkgray";
                            break;
                        default:
                            break;
                    }
                    <td style="color:@StatusColor">@item.ChampionshipStatusName</td>
                    <td>@item.ChampionshipTypeName</td>
                    <td><button class="btn-primary" @onclick="() => Details(item.Id)">Details</button></td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>There are no championships...</p>
}



@code {
    string StatusColor = "black";

    private void Sort()
    {
        if (championshipWithDetails != null)
        {
            championshipWithDetails = championshipWithDetails.OrderBy(x => x.Name).ToList();
            StateHasChanged();
        }
    }
    private List<ChampionshipDto>? championshipWithDetails;

    protected override async Task OnInitializedAsync()
    {
        using HttpClient client = httpClient.CreateClient(configuration["ClientName"]!);
        var test = await client.GetFromJsonAsync<List<ChampionshipDto>>("api/championshipclass/details");
        if (test != null)
            championshipWithDetails = test;
    }

    private void Details(int id)
    {
        nManager.NavigateTo($"/championshipDetails?id={Uri.EscapeDataString(id.ToString())}");
    }
}
