@page "/championshipDetails"
@using Microsoft.AspNetCore.WebUtilities
@inject IHttpClientFactory httpClient
@inject NavigationManager nManager
@inject IConfiguration configuration


@rendermode InteractiveServer


<PageTitle>Championship Info</PageTitle>

@if(championshipWithDetails != null)
{
    <center><h1>@championshipWithDetails.Name</h1></center>
}

<RadzenDataGrid @ref="gamesList"
                AllowFiltering="true"
                FilterPopupRenderMode="PopupRenderMode.OnDemand"
                AllowPaging="true"
                PageSize="8"
                AllowSorting="true"
                Data="@games"
                TItem="GameDto">
    <Columns>
        <RadzenDataGridColumn TItem="GameDto" Property="Name" Title="Name">
            <Template Context="game">
                @game.Name
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="GameDto" Property="Date" Title="Date">
            <Template Context="game">
                @game.Date
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="GameDto" Property="BlueTeamName" Title="Blue Team Name">
            <Template Context="game">
                @game.BlueTeamName
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="GameDto" Property="RedTeamName" Title="Red Team Name">
            <Template Context="game">
                @game.RedTeamName
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="GameDto" Property="WinnerName" Title="Winner">
            <Template Context="game">
                @game.WinnerName
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@if (championshipWithDetails != null)
{
    <div class="container">
        @foreach (var game in championshipWithDetails.Games)
        {
            <div class="box">
                <center><p>Game name: @game.Name</p></center>
                <p>Game Type: @game.GameTypeName</p>
                <p>Blue Team: @game.BlueTeamName</p>
                <p>Red name: @game.RedTeamName</p>
            </div>

            <div class="box">
                <center><p>Game name: @game.Name</p></center>
                <p>Game Type: @game.GameTypeName</p>
                <p>Blue Team: @game.BlueTeamName</p>
                <p>Red name: @game.RedTeamName</p>               
            </div>
        }
    </div>

}

@code {
    RadzenDataGrid<GameDto>? gamesList;

    public string? id;

    private string? data;

    private ChampionshipDto? championshipWithDetails;
    private IEnumerable<GameDto>? games;

    protected override async Task OnInitializedAsync()
    {
        // Get the query parameters from the URL
        var uri = nManager.ToAbsoluteUri(nManager.Uri);
        var queryParams = QueryHelpers.ParseQuery(uri.Query);

        // Extract the data parameter from the query parameters
        if (queryParams.TryGetValue("id", out var data))
        {
            id = Uri.UnescapeDataString(data!);
        }

        using HttpClient client = httpClient.CreateClient(configuration["ClientName"]!);
        var test = await client.GetFromJsonAsync<ChampionshipDto>($"api/Championship/{id}");
        if (test != null)
        {
            championshipWithDetails = test;
            games = championshipWithDetails.Games;
        }     
    }
}
