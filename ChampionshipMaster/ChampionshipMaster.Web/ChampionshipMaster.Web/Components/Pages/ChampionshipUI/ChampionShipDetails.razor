@page "/championshipDetails/{id}"
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.AspNetCore.Components
@inject IHttpClientFactory httpClient
@inject NavigationManager nManager
@inject IConfiguration configuration
@using Microsoft.EntityFrameworkCore
@inject Radzen.DialogService dialogService
@rendermode InteractiveServer


<PageTitle>Championship Info</PageTitle>

@if(championshipWithDetails != null)
{
    <center><h1 style="color:white;">@championshipWithDetails.Name</h1></center>
}

<RadzenDataGrid @ref="gamesList"
                AllowFiltering="true"
                FilterPopupRenderMode="PopupRenderMode.OnDemand"
                AllowPaging="true"
                PageSize="6"
                AllowSorting="true"
                Data="@games"
                TItem="GameDto">
    <Columns>
        <RadzenDataGridColumn TItem="GameDto" Property="Name" Title="Name">
            <Template Context="game">
                @game.Name
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="GameDto" Property="Date" Title="Date">
            <Template Context="game">
                @game.Date
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="GameDto" Property="BlueTeamName" Title="Blue Team Name">
            <Template Context="game">
                @game.BlueTeamName
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="GameDto" Property="RedTeamName" Title="Red Team Name">
            <Template Context="game">
                @game.RedTeamName
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="GameDto" Property="WinnerName" Title="Winner">
            <Template Context="game">
                @game.WinnerName
            </Template>
        </RadzenDataGridColumn>

    </Columns>

</RadzenDataGrid><br />
<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem">
    <RadzenButton Click="@((args) => dialogService.Close(true))" Variant="Variant.Flat" Text="Close" Style="width: 120px" />
</RadzenStack>

@code {

    [Parameter] public string? id { get; set; }
    [Parameter] public string? name { get; set; }

    RadzenDataGrid<GameDto>? gamesList;    

    private string? data;

    private ChampionshipDto? championshipWithDetails;
    private IEnumerable<GameDto>? games;

    protected override async Task OnInitializedAsync()
    {
        // Get the query parameters from the URL
        var uri = nManager.ToAbsoluteUri(nManager.Uri);
        var queryParams = QueryHelpers.ParseQuery(uri.Query);

        using HttpClient client = httpClient.CreateClient(configuration["ClientName"]!);
        var test = await client.GetFromJsonAsync<ChampionshipDto>($"api/Championship/{id}");
        if (test != null)
        {
            championshipWithDetails = test;
            games = championshipWithDetails.Games;
        }     
    }
}
