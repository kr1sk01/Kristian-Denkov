@page "/championshipview"
@using System.Net.Http
@inject HttpClient httpClient

@rendermode InteractiveServer

<PageTitle>Championships</PageTitle>
<button @onclick="Sort">Sort</button>
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Game Type</th>
            <th>Date</th>
            <th>Winner</th>
            <th>Champ Status</th>
            <th>Champ Type</th>
        </tr>
    </thead>
    <tbody>
        @if (championshipWithDetails != null)
        {
            foreach (var item in championshipWithDetails)
            {
                <tr class="table-row">
                    <td>@item.Name</td>
                    <td>@item.GameTypeName</td>
                    <td>@item.Date</td>
                    <td>@item.WinnerName</td>
                    
                    @switch (item.ChampionshipStatusName)
                    {
                        case "Finished":
                            StatusColor = "black";
                            break;
                        case "Coming":
                            StatusColor = "green";
                            break;
                        case "Live":
                            StatusColor = "red";
                            break;
                        case "Cancelled":
                            StatusColor = "darkgray";
                            break;
                        default:
                            break;
                    }
                    <td style="color:@StatusColor">@item.ChampionshipStatusName</td>
                    <td>@item.ChampionshipTypeName</td>
                    <td><button class="btn-primary">Details</button></td>
                </tr>
            }
        }
        else
            {
               <p>There are no championships...</p>
            }

    </tbody>
</table>

@code {
    string StatusColor = "black";

    private void Sort()
    {
        championshipWithDetails = championshipWithDetails.OrderBy(x => x.Name).ToList();
        StateHasChanged();
    }
    private List<ChampionshipClassDto> championshipWithDetails;

    bool done;
    protected override async Task OnInitializedAsync()
    {
        var test = await httpClient.GetFromJsonAsync<List<ChampionshipClassDto>>("api/championshipclass/details");
        if (test != null)
            championshipWithDetails = test;
        else
            done = false; 
    }
}
